---
import BaseLayout from '../layouts/BaseLayout.astro';
import AnnouncementGrid from '../components/AnnouncementGrid.astro';
import { fetchInstagramPostsCached, getCacheStats } from '../lib/instagram-rss-cached';
import { filterAnnouncementPosts } from '../lib/announcement-parser';
import { ANNOUNCEMENT_CONFIG, UI_CONFIG } from '../config/constants';

const rssUrl = import.meta.env.INSTAGRAM_RSS_URL || '';
const announcementHashtag = import.meta.env.ANNOUNCEMENT_HASHTAG || ANNOUNCEMENT_CONFIG.DEFAULT_HASHTAG;
const enableHashtagFilter = import.meta.env.ENABLE_HASHTAG_FILTER !== 'false';

let announcements = [];
let error = null;
let cacheStats = null;

if (rssUrl) {
  try {
    const posts = await fetchInstagramPostsCached(rssUrl);
    cacheStats = await getCacheStats();
    
    if (enableHashtagFilter) {
      announcements = filterAnnouncementPosts(posts, announcementHashtag);
    } else {
      announcements = posts.map(post => ({
        ...post,
        category: 'news' as const,
        eventDate: undefined,
        location: undefined
      }));
    }
    
    announcements = announcements.slice(0, ANNOUNCEMENT_CONFIG.MAX_DISPLAY_POSTS * 2); // Â§ö„ÇÅ„Å´ÂèñÂæó
  } catch (e) {
    error = e;
    console.error('Error fetching posts:', e);
  }
}
---

<BaseLayout title="InstagramÂëäÁü•ÊäïÁ®ø | DONATI">
  <style define:vars={{ 
    primaryColor: UI_CONFIG.COLORS.PRIMARY,
    accentColor: UI_CONFIG.COLORS.ACCENT,
  }}>
    :root {
      --ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);
    }
    
    .ultimate-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px 20px;
    }
    
    .header {
      text-align: center;
      margin-bottom: 48px;
      animation: fadeInDown 0.8s var(--ease-out-expo);
    }
    
    @keyframes fadeInDown {
      from {
        opacity: 0;
        transform: translateY(-30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    h1 {
      color: var(--primaryColor);
      margin-bottom: 16px;
      font-size: clamp(28px, 5vw, 42px);
      font-weight: 700;
      letter-spacing: -0.02em;
    }
    
    .subtitle {
      color: #666;
      font-size: 18px;
      opacity: 0.8;
    }
    
    .smart-bar {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 24px;
      padding: 16px 24px;
      margin-bottom: 32px;
      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
      display: flex;
      flex-wrap: wrap;
      gap: 16px;
      justify-content: space-between;
      align-items: center;
      animation: slideUp 0.6s var(--ease-out-expo) 0.2s backwards;
    }
    
    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .search-box {
      flex: 1;
      min-width: 200px;
      position: relative;
    }
    
    .search-input {
      width: 100%;
      padding: 12px 20px 12px 44px;
      border: 2px solid #e0e0e0;
      border-radius: 24px;
      font-size: 16px;
      transition: all 0.3s;
      background: #f8f8f8;
    }
    
    .search-input:focus {
      outline: none;
      border-color: var(--primaryColor);
      background: white;
      box-shadow: 0 0 0 4px rgba(44, 90, 160, 0.1);
    }
    
    .search-icon {
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      opacity: 0.5;
      pointer-events: none;
    }
    
    .filter-tags {
      display: flex;
      gap: 8px;
      flex-wrap: wrap;
    }
    
    .tag {
      padding: 8px 16px;
      background: #f0f0f0;
      border: 2px solid transparent;
      border-radius: 20px;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.2s;
      user-select: none;
    }
    
    .tag:hover {
      background: #e0e0e0;
      transform: translateY(-2px);
    }
    
    .tag.active {
      background: var(--accentColor);
      color: white;
      border-color: var(--accentColor);
      transform: scale(1.05);
    }
    
    .action-buttons {
      display: flex;
      gap: 12px;
    }
    
    .action-button {
      padding: 10px 20px;
      background: var(--primaryColor);
      color: white;
      border: none;
      border-radius: 20px;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      gap: 8px;
      white-space: nowrap;
    }
    
    .action-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(44, 90, 160, 0.3);
    }
    
    .action-button:active {
      transform: translateY(0);
    }
    
    .view-toggle {
      background: white;
      color: var(--primaryColor);
      border: 2px solid var(--primaryColor);
    }
    
    .stats-banner {
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 32px;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 24px;
      animation: slideUp 0.6s var(--ease-out-expo) 0.4s backwards;
    }
    
    .stat-card {
      text-align: center;
    }
    
    .stat-icon {
      font-size: 32px;
      margin-bottom: 8px;
    }
    
    .stat-value {
      font-size: 28px;
      font-weight: bold;
      color: var(--primaryColor);
      line-height: 1;
    }
    
    .stat-label {
      font-size: 14px;
      color: #666;
      margin-top: 4px;
    }
    
    .content-area {
      animation: fadeIn 0.6s var(--ease-out-expo) 0.6s backwards;
    }
    
    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
    
    .empty-state,
    .error-state {
      text-align: center;
      padding: 80px 20px;
    }
    
    .state-icon {
      font-size: 80px;
      margin-bottom: 24px;
      animation: bounce 1s ease-out;
    }
    
    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-20px);
      }
      60% {
        transform: translateY(-10px);
      }
    }
    
    .state-title {
      font-size: 24px;
      color: #333;
      margin-bottom: 12px;
    }
    
    .state-message {
      color: #666;
      margin-bottom: 24px;
    }
    
    .toast {
      position: fixed;
      bottom: 24px;
      left: 50%;
      transform: translateX(-50%) translateY(100px);
      background: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 16px 24px;
      border-radius: 12px;
      font-size: 14px;
      opacity: 0;
      transition: all 0.3s var(--ease-out-expo);
      pointer-events: none;
      z-index: 1000;
    }
    
    .toast.show {
      transform: translateX(-50%) translateY(0);
      opacity: 1;
    }
    
    .floating-actions {
      position: fixed;
      bottom: 24px;
      right: 24px;
      display: flex;
      flex-direction: column;
      gap: 12px;
      z-index: 100;
    }
    
    .fab {
      width: 56px;
      height: 56px;
      border-radius: 50%;
      background: var(--primaryColor);
      color: white;
      border: none;
      font-size: 24px;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      transition: all 0.3s;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .fab:hover {
      transform: scale(1.1);
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
    }
    
    .fab.secondary {
      width: 48px;
      height: 48px;
      font-size: 20px;
      background: white;
      color: var(--primaryColor);
      border: 2px solid var(--primaryColor);
    }
    
    @media (max-width: 768px) {
      .smart-bar {
        padding: 12px 16px;
      }
      
      .search-box {
        width: 100%;
      }
      
      .filter-tags {
        width: 100%;
        justify-content: center;
      }
      
      .action-buttons {
        width: 100%;
        justify-content: center;
      }
    }
  </style>
  
  <div class="ultimate-container">
    <div class="header">
      <h1>‚ú® InstagramÂëäÁü•ÊäïÁ®ø</h1>
      <p class="subtitle">ÊúÄÊñ∞„ÅÆ„Ç§„Éô„É≥„Éà„Éª„ÉØ„Éº„ÇØ„Ç∑„Éß„ÉÉ„ÉóÊÉÖÂ†±„Çí„Çπ„Éû„Éº„Éà„Å´„ÅäÂ±ä„Åë</p>
    </div>
    
    {rssUrl && !error && (
      <>
        <div class="smart-bar">
          <div class="search-box">
            <span class="search-icon">üîç</span>
            <input 
              type="text" 
              class="search-input" 
              placeholder="„Ç§„Éô„É≥„Éà„ÇíÊ§úÁ¥¢..."
              data-search-input
            />
          </div>
          
          <div class="filter-tags" data-filter-tags>
            <button class="tag active" data-category="all">
              „Åô„Åπ„Å¶
            </button>
            <button class="tag" data-category="workshop">
              „ÉØ„Éº„ÇØ„Ç∑„Éß„ÉÉ„Éó
            </button>
            <button class="tag" data-category="event">
              „Ç§„Éô„É≥„Éà
            </button>
            <button class="tag" data-category="news">
              „ÅäÁü•„Çâ„Åõ
            </button>
          </div>
          
          <div class="action-buttons">
            <button class="action-button view-toggle" data-view-toggle>
              <span data-view-icon>üì±</span>
              <span data-view-text>Ë°®Á§∫</span>
            </button>
            <button class="action-button" data-refresh>
              <span>üîÑ</span>
              <span>Êõ¥Êñ∞</span>
            </button>
          </div>
        </div>
        
        {announcements.length > 0 && (
          <div class="stats-banner">
            <div class="stat-card">
              <div class="stat-icon">üì¢</div>
              <div class="stat-value">{announcements.length}</div>
              <div class="stat-label">ÂëäÁü•ÊäïÁ®ø</div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">üìÖ</div>
              <div class="stat-value">{announcements.filter(a => a.eventDate).length}</div>
              <div class="stat-label">ÈñãÂÇ¨‰∫àÂÆö</div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">üìç</div>
              <div class="stat-value">{announcements.filter(a => a.location).length}</div>
              <div class="stat-label">Â†¥ÊâÄ„ÅÇ„Çä</div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">‚ö°</div>
              <div class="stat-value">{cacheStats?.l1HitRate ? Math.round(cacheStats.l1HitRate) : 0}%</div>
              <div class="stat-label">„Ç≠„É£„ÉÉ„Ç∑„É•ÂäπÁéá</div>
            </div>
          </div>
        )}
      </>
    )}
    
    <div class="content-area">
      {!rssUrl ? (
        <div class="empty-state">
          <div class="state-icon">üöÄ</div>
          <h2 class="state-title">„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Åó„Å¶„Çπ„Çø„Éº„ÉàÔºÅ</h2>
          <p class="state-message">Áí∞Â¢ÉÂ§âÊï∞„ÇíË®≠ÂÆö„Åó„Å¶„ÄÅInstagramÊäïÁ®ø„ÇíË°®Á§∫„Åó„Åæ„Åó„Çá„ÅÜ</p>
        </div>
      ) : error ? (
        <div class="error-state">
          <div class="state-icon">üò¢</div>
          <h2 class="state-title">„Åä„Å£„Å®„ÄÅ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü</h2>
          <p class="state-message">„Åó„Å∞„Çâ„ÅèÂæÖ„Å£„Å¶„Åã„Çâ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ</p>
          <button class="action-button" onclick="location.reload()">
            ÂÜçË™≠„ÅøËæº„Åø
          </button>
        </div>
      ) : (
        <AnnouncementGrid 
          announcements={announcements} 
          enablePullToRefresh={true}
          enableInfiniteScroll={true}
        />
      )}
    </div>
  </div>
  
  <div class="floating-actions">
    <button class="fab secondary" data-scroll-top title="„Éà„ÉÉ„Éó„Å∏">
      ‚Üë
    </button>
    <button class="fab" data-compose title="Êñ∞Ë¶èÊäïÁ®ø">
      ‚úèÔ∏è
    </button>
  </div>
  
  <div class="toast" data-toast></div>
  
  <script>
    // „Éà„Éº„Çπ„ÉàÈÄöÁü•
    function showToast(message) {
      const toast = document.querySelector('[data-toast]');
      toast.textContent = message;
      toast.classList.add('show');
      
      setTimeout(() => {
        toast.classList.remove('show');
      }, 3000);
    }
    
    // Ê§úÁ¥¢Ê©üËÉΩ
    const searchInput = document.querySelector('[data-search-input]');
    const announcements = document.querySelectorAll('[data-category]');
    
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        const query = e.target.value.toLowerCase();
        let visibleCount = 0;
        
        announcements.forEach(item => {
          const card = item.querySelector('.card-title');
          const text = card?.textContent.toLowerCase() || '';
          
          if (text.includes(query)) {
            item.style.display = 'block';
            visibleCount++;
          } else {
            item.style.display = 'none';
          }
        });
        
        if (visibleCount === 0) {
          showToast('Ê§úÁ¥¢ÁµêÊûú„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }
      });
    }
    
    // „Éï„Ç£„É´„Çø„ÉºÊ©üËÉΩ
    const filterTags = document.querySelectorAll('[data-filter-tags] .tag');
    
    filterTags.forEach(tag => {
      tag.addEventListener('click', () => {
        filterTags.forEach(t => t.classList.remove('active'));
        tag.classList.add('active');
        
        const category = tag.dataset.category;
        let visibleCount = 0;
        
        announcements.forEach(item => {
          if (category === 'all' || item.dataset.category === category) {
            item.style.display = 'block';
            visibleCount++;
          } else {
            item.style.display = 'none';
          }
        });
        
        showToast(`${visibleCount}‰ª∂„ÅÆÊäïÁ®ø„ÇíË°®Á§∫‰∏≠`);
      });
    });
    
    // Ë°®Á§∫Âàá„ÇäÊõø„Åà
    const viewToggle = document.querySelector('[data-view-toggle]');
    const grid = document.querySelector('[data-announcements-grid]');
    let isListView = false;
    
    if (viewToggle && grid) {
      viewToggle.addEventListener('click', () => {
        isListView = !isListView;
        
        if (isListView) {
          grid.style.gridTemplateColumns = '1fr';
          document.querySelector('[data-view-icon]').textContent = 'üìã';
          document.querySelector('[data-view-text]').textContent = '„É™„Çπ„Éà';
        } else {
          grid.style.gridTemplateColumns = '';
          document.querySelector('[data-view-icon]').textContent = 'üì±';
          document.querySelector('[data-view-text]').textContent = '„Ç∞„É™„ÉÉ„Éâ';
        }
        
        showToast(isListView ? '„É™„Çπ„ÉàË°®Á§∫„Å´Âàá„ÇäÊõø„Åà„Åæ„Åó„Åü' : '„Ç∞„É™„ÉÉ„ÉâË°®Á§∫„Å´Âàá„ÇäÊõø„Åà„Åæ„Åó„Åü');
      });
    }
    
    // Êõ¥Êñ∞„Éú„Çø„É≥
    const refreshButton = document.querySelector('[data-refresh]');
    if (refreshButton) {
      refreshButton.addEventListener('click', () => {
        refreshButton.style.animation = 'spin 1s';
        showToast('Êõ¥Êñ∞‰∏≠...');
        
        setTimeout(() => {
          location.reload();
        }, 1000);
      });
    }
    
    // „Çπ„ÇØ„É≠„Éº„É´„Éà„ÉÉ„Éó
    const scrollTopButton = document.querySelector('[data-scroll-top]');
    if (scrollTopButton) {
      scrollTopButton.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
      
      // „Çπ„ÇØ„É≠„Éº„É´‰ΩçÁΩÆ„Å´Âøú„Åò„Å¶Ë°®Á§∫/ÈùûË°®Á§∫
      window.addEventListener('scroll', () => {
        if (window.scrollY > 300) {
          scrollTopButton.style.opacity = '1';
          scrollTopButton.style.transform = 'scale(1)';
        } else {
          scrollTopButton.style.opacity = '0';
          scrollTopButton.style.transform = 'scale(0.8)';
        }
      });
    }
    
    // Êñ∞Ë¶èÊäïÁ®ø„Éú„Çø„É≥Ôºà„Éá„É¢Ôºâ
    const composeButton = document.querySelector('[data-compose]');
    if (composeButton) {
      composeButton.addEventListener('click', () => {
        showToast('InstagramÊäïÁ®øÁîªÈù¢„ÇíÈñã„Åç„Åæ„ÅôÔºà„Éá„É¢Ôºâ');
      });
    }
    
    // „Ç≠„Éº„Éú„Éº„Éâ„Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„Éà
    document.addEventListener('keydown', (e) => {
      if (e.key === '/' && !e.ctrlKey && !e.metaKey) {
        e.preventDefault();
        searchInput?.focus();
      }
      
      if (e.key === 'r' && (e.ctrlKey || e.metaKey)) {
        e.preventDefault();
        location.reload();
      }
    });
    
    // ÂàùÂõû„Ç¢„ÇØ„Çª„ÇπÊôÇ„ÅÆ„Ç¶„Çß„É´„Ç´„É†„É°„ÉÉ„Çª„Éº„Ç∏
    if (!localStorage.getItem('visited')) {
      setTimeout(() => {
        showToast('üëã InstagramÂëäÁü•ÊäïÁ®ø„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ');
        localStorage.setItem('visited', 'true');
      }, 1000);
    }
  </script>
</BaseLayout>