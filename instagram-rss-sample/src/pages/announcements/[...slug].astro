---
import BaseLayout from '../../layouts/BaseLayout.astro';
import AnnouncementCard from '../../components/AnnouncementCard.astro';
import { fetchInstagramPosts } from '../../lib/instagram-rss';
import { filterAnnouncementPosts, generateSlug } from '../../lib/announcement-parser';
import { ANNOUNCEMENT_CONFIG, UI_CONFIG, IMAGE_PROXY_CONFIG } from '../../config/constants';
import type { AnnouncementPost } from '../../types/instagram';

export async function getStaticPaths() {
  const rssUrl = import.meta.env.INSTAGRAM_RSS_URL || '';
  const announcementHashtag = import.meta.env.ANNOUNCEMENT_HASHTAG || ANNOUNCEMENT_CONFIG.DEFAULT_HASHTAG;
  
  if (!rssUrl) {
    console.warn('INSTAGRAM_RSS_URL not set');
    return [];
  }

  const posts = await fetchInstagramPosts(rssUrl);
  const announcements = filterAnnouncementPosts(posts, announcementHashtag);
  
  return announcements.map((announcement) => ({
    params: { slug: generateSlug(announcement) },
    props: { announcement },
  }));
}

const { announcement } = Astro.props as { announcement: AnnouncementPost };

function getProxiedImageUrl(url: string) {
  const { BASE_URL, DEFAULT_WIDTH, DEFAULT_HEIGHT, FIT } = IMAGE_PROXY_CONFIG;
  return `${BASE_URL}?url=${encodeURIComponent(url)}&w=${DEFAULT_WIDTH * 2}&h=${DEFAULT_HEIGHT * 2}&fit=${FIT}`;
}
---

<BaseLayout title={`${announcement.title} | DONATI`}>
  <style define:vars={{ 
    primaryColor: UI_CONFIG.COLORS.PRIMARY,
    accentColor: UI_CONFIG.COLORS.ACCENT,
    bgColor: UI_CONFIG.COLORS.BACKGROUND,
    textColor: UI_CONFIG.COLORS.TEXT,
    textMuted: UI_CONFIG.COLORS.TEXT_MUTED
  }}>
    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    .hero-image {
      width: 100%;
      height: 400px;
      object-fit: cover;
      border-radius: 8px;
      margin-bottom: 30px;
    }
    .category-badge {
      display: inline-block;
      padding: 4px 12px;
      background-color: var(--primaryColor);
      color: white;
      border-radius: 4px;
      font-size: 14px;
      margin-bottom: 10px;
    }
    .meta-info {
      color: var(--textMuted);
      margin-bottom: 20px;
    }
    .content {
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      line-height: 1.8;
      white-space: pre-wrap;
    }
    .hashtags {
      margin-top: 20px;
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
    }
    .hashtag {
      color: var(--primaryColor);
      text-decoration: none;
    }
    .back-to-list {
      display: inline-block;
      margin-bottom: 20px;
      color: var(--primaryColor);
      text-decoration: none;
    }
    .back-to-list:hover {
      text-decoration: underline;
    }
  </style>
  <div class="container">
    <a href="/" class="back-to-list">← 一覧に戻る</a>
    
    {announcement.imageUrl && (
      <img src={getProxiedImageUrl(announcement.imageUrl)} alt={announcement.title} class="hero-image" />
    )}
    
    <span class="category-badge">{announcement.category}</span>
    
    <h1>{announcement.title}</h1>
    
    <div class="meta-info">
      {announcement.eventDate && (
        <p>開催日: {announcement.eventDate.toLocaleDateString('ja-JP')}</p>
      )}
      {announcement.location && (
        <p>場所: {announcement.location}</p>
      )}
      <p>投稿日: {announcement.pubDate.toLocaleDateString('ja-JP')}</p>
    </div>
    
    <div class="content">
      {announcement.content}
    </div>
    
    <div class="hashtags">
      {announcement.hashtags.map((tag) => (
        <a href={announcement.link} class="hashtag" target="_blank" rel="noopener">
          {tag}
        </a>
      ))}
    </div>
    
    <p style="margin-top: 30px;">
      <a href={announcement.link} target="_blank" rel="noopener" style="color: var(--primaryColor);">
        → Instagramで見る
      </a>
    </p>
  </div>
</BaseLayout>